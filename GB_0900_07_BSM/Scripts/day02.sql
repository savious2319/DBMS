--JOIN
--EMP 테이블 사원번호로 DEPT 테이블의 지역 검색하기
SELECT E.EMPNO, E.DEPTNO, D.LOC 
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO; 


--PLAYER 테이블에서 송종국 선수가 속한 팀의 전화번호 검색
SELECT P.PLAYER_NAME, P.TEAM_ID, T.TEAM_NAME, T.REGION_NAME, T.E_TEAM_NAME, T.TEL 
FROM PLAYER P JOIN TEAM T
ON P.TEAM_ID = T.TEAM_ID
WHERE P.PLAYER_NAME = '송종국';

--JOIN할때는 밑에 처럼 ON절에 조건식을 다 달자!
SELECT P.PLAYER_NAME, P.TEAM_ID, T.TEAM_NAME, T.REGION_NAME, T.E_TEAM_NAME, T.TEL 
FROM PLAYER P JOIN TEAM T
ON P.TEAM_ID = T.TEAM_ID AND P.PLAYER_NAME = '송종국';



--JOBS 테이블에서 JOB_ID로 EMPLOYEES의 EMAIL, 성 이름 검색
--CONCATENATION 사용
SELECT J.JOB_ID, J.JOB_TITLE, E.LAST_NAME || ' ' || E.FIRST_NAME 직원이름, E.EMAIL
FROM JOBS J JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID; 



--EMPLOYEES 테이블에서 평균 급여보다 높은 사원들을 JOB_ID별로 묶고
--JOB_ID, 그룹별 평균 급여, DEPARTMENT_NAME, 전체 평균 급여 검색
--그룹별 평균 급여 기준 내림차순으로 정렬
--결과가 평균 급여보다 높은지 확인하기
SELECT JOB_ID,
D.DEPARTMENT_NAME, 
ROUND(AVG(SALARY)) "그룹별 평균 급여",
(SELECT ROUND(AVG(SALARY)) FROM EMPLOYEES) "전체 평균 급여"
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID AND SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
GROUP BY E.JOB_ID, D.DEPARTMENT_NAME
ORDER BY 3 DESC; --AVG(SALARY) DESC;


--PLAYER 테이블에서 전체 평균키보다 큰 선수들을 TEAM_ID별로 묶고
--TEAM_ID, TEAM_NAME, 그룹별 평균키, 전체 평균키 검색
--TEAM_ID로 오름차순 정렬

--예)
--TEAM_ID	TEAM_NAME	그룹별 평균키	전체 평균키
--K06		아이파크	키				키

SELECT
T.TEAM_ID, T.TEAM_NAME,
ROUND(AVG(HEIGHT), 2) || 'cm' "그룹별 평균키", 
ROUND((SELECT AVG(HEIGHT) FROM PLAYER), 2) || 'cm' "전체 평균키"
FROM PLAYER P JOIN TEAM T
ON P.TEAM_ID = T.TEAM_ID AND P.HEIGHT > (SELECT AVG(HEIGHT) FROM PLAYER)
GROUP BY T.TEAM_ID, T.TEAM_NAME
ORDER BY 1;


--비등가 조인
SELECT * FROM EMP;
SELECT * FROM SALGRADE;

SELECT E.EMPNO, D.DNAME, E.SAL, S.GRADE
FROM EMP E JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
JOIN DEPT D
ON E.DEPTNO = D.DEPTNO; 

SELECT * FROM DEPT;


--EMPLOYEES 테이블에서 HIREDATE가
--2003 ~ 2005년 까지인 사원 검색
--HIRE_DATE, FIRST_NAME, DEPARTMENT_NAME 검색
--HIRE_DATE 순으로 정렬
SELECT TO_CHAR(E.HIRE_DATE, 'YYYY-MM') "입사 날짜", 
E.FIRST_NAME 이름, D.DEPARTMENT_NAME 부서명 
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID AND 
E.HIRE_DATE BETWEEN TO_DATE('2003-01', 'YYYY-MM') AND TO_DATE('2005-12', 'YYYY-MM') 
ORDER BY 1;



--SELF JOIN
SELECT E1.ENAME 사원, E2.ENAME 매니저
FROM EMP E1 JOIN EMP E2 --같은 테이블을 조인한다
ON E1.MGR = E2.EMPNO; --E1는 E2한테 "저의 매니저가 누구인가요?" 그래서 E1는 사원 E2는 매니저

SELECT * FROM EMP;

SELECT * FROM JAZZ_TEST WHERE NICKNAME IS NULL;
SELECT * FROM JAZZ_TEST WHERE NICKNAME = '백성민';










